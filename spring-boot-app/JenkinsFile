pipeline {
    agent {
        docker {
            image 'node:14'
            args '-u root:root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    stages {
        stage('Checkout') {
            steps {
              
              git branch: 'main', url: 'https://github.com/shanjith-V/ultimate-cicd-pipeline.git'
            }
        }
        stage('Build and Test') {
            steps {
                sh 'cd SPRING-BOOT-APP && mvn clean package'
            }
        }
        stage('Static code analysis') {
            environment {
                SONAR_HOST_URL = 'http://sonarqube:9000'
               
            }
            steps {
              withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_TOKEN')]) {
                sh 'cd SPRING-BOOT-APP && mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN -Dsonar.host.url=$SONAR_HOST_URL'
              }
            }
        }
        stage('Build and push Docker image') {
            environment {
                DOCKER_IMAGE = "shanjithv/spring-boot-app:${BUILD_NUMBER}"
                REGISTRY_CREDENTIALS = credentials('docker-cred')
            }
            
            
            steps {
                script{
                    sh ' cd SPRING-BOOT-APP && docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred"){
                        dockerImage.push()
                    }
                }
               
            }
         } 
            stage('update Deployment File'){
                environment {
                    GIT_REPO_NAME = 'SPRING-BOOT-APP'
                    GIT_USER_NAME = 'shanjith V'
                }
                steps{
                    withCredentials([string(credentialsId: 'github', variable: 'GIT_TOKEN')]) {
                        sh '''
                            git config  --global user.email "sanjumac0810@gmail.com"
                            git config  --global user.name "shanjith V"
                            BUILD_NUMBER=${BUILD_NUMBER }
                            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" deployment.yml
                            git add spring-boot-app-manifests/deployment.yml
                            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
                        '''
                }
            }
        }
    }
}

